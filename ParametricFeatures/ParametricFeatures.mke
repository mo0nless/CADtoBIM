#---------------------------------------------------------------------------------------+
#
#    $Source: ParametricFeatures.mke $
# 
#    $Copyright: (c) 2017 Bentley Systems, Incorporated. All rights reserved. $
#
#---------------------------------------------------------------------------------------+
PolicyFile = MicroStationPolicy.mki
DEFAULT_TARGET_PROCESSOR_ARCHITECTURE=x64

appName     =  ParametricFeatures
sAppName    =  ParametricFeatures

MDLMKI = $(MSMDE)mki/
mdlLibs = $(MSMDE)library/

openCascade = $(IFCO)deps-vs2015-x64-installed/opencascade-7.3.0p3
boost =  $(IFCO)deps/boost_1_67_0
ifcLib =  $(IFCO)installed-vs2015-x64/lib
ifcOpenShell = $(IFCO)src

%include $(MDLMKI)mdl.mki 

#--------------------------------------------------------------------------------------
#    Create needed output directories in case they don't exist
#--------------------------------------------------------------------------------------
always:
    !~@mkdir $(o)
    !~@mkdir $(rscObjects)
    !~@mkdir $(reqdObjs)

#--------------------------------------------------------------------------------------
# http://www.la-solutions.co.uk/content/CONNECT/MicroStationAPI/DevelopmentEnvironment.htm
# If you are building using Bentley Make (bmake.exe), 
# then add the path to the include list using the cincapnd.mki macro. 
# In your make file, add something like this
# dirToSearch = Path to the directory that needs to be included
# %include $(MDLMKI)cincapnd.mki
#--------------------------------------------------------------------------------------

#dirToSearch = $(MDLMKI)
#genSrc = $(o)

dirToSearch = $(openCascade)/inc
%include $(MDLMKI)cincapnd.mki

dirToSearch = $(boost)
%include $(MDLMKI)cincapnd.mki

#dirToSearch = $(ifcOpenShell)/include
dirToSearch = $(ifcOpenShell)
%include $(MDLMKI)cincapnd.mki

#--------------------------------------------------------------------------------------
#    Define macros specific to this example
#--------------------------------------------------------------------------------------
baseDir         = $(_MakeFilePath)
privateInc      = $(baseDir)
langSpec        = $(baseDir)transkit/

libRscs = \
    $(rscObjects)$(sAppName).rsc

#--------------------------------------------------------------------------------------
#    Create object files
#--------------------------------------------------------------------------------------
$(rscObjects)$(sAppName).rsc     : $(baseDir)$(sAppName).r

$(o)$(sAppName).h                : $(baseDir)$(sAppName).r

#--------------------------------------------------------------------------------------
#    Define the object container files
#--------------------------------------------------------------------------------------
appObjects = \
	$(o)$(appName)$(oext) \
	$(o)Initialization$(oext) \
	$(o)GraphicsProcessor$(oext) \
	$(o)IfcGenerator$(oext) \
	$(o)PropertiesReader$(oext) \
	$(o)BooleanFunctionsEnum$(oext) \
	$(o)ReaderPropertiesDictionary$(oext) \
	$(o)ResultStatus$(oext) \
	$(o)ResultStatusEnum$(oext) \
	$(o)MappingHandler$(oext) \
	$(o)ReaderPropertiesMapper$(oext) \
	$(o)DictionaryProperties$(oext) \
	$(o)GraphicProperties$(oext) \
	$(o)ReaderProperties$(oext) \
	$(o)SmartFeatureContainer$(oext) \
	$(o)SmartFeatureProperties$(oext) \
	$(o)SmartFeatureTreeNode$(oext) \


#--------------------------------------------------------------------------------------
#    Set up to use dlmcomp.mki and dlmlink.mki
#--------------------------------------------------------------------------------------

DLM_NAME                = $(appName)
# Specify the output destination folder
DLM_DEST                = $(OPAPPS)
DLM_OBJECT_FILES        = $(appObjects)
DLM_OBJECT_DEST         = $(o)
DLM_LIBDEF_SRC          = $(_MakeFilePath)
DLM_SPECIAL_LINKOPT     = -fixed:no     # Notify linker this library does not require a fixed base address to load
DLM_NO_DLS              = 1             # USE DLLEXPORT IN .CPP
DLM_NO_DEF              = 1
DLM_NOENTRY             = 1
DLM_NO_MANIFEST         = 1             # If not set linker embeds your current (developer) patched MSVCRT version manifest in output dll.  This is not desirable and produces side-by-side CLIENT ERROR: 14001)
DLM_NO_SIGN             = 1             # If not set and no certificate found, ERROR: 'singleton' is not recognized as an internal or external command
DLM_NO_INITIALIZE_FUNCTION  = 1

LINKER_LIBRARIES + $(ifcLib)/IfcParse.lib

LINKER_LIBRARIES + $(ifcLib)/IfcGeom.lib
LINKER_LIBRARIES + $(ifcLib)/IfcGeom_ifc2x3.lib
LINKER_LIBRARIES + $(ifcLib)/IfcGeom_ifc4.lib
LINKER_LIBRARIES + $(ifcLib)/IfcGeom_ifc4x1.lib
LINKER_LIBRARIES + $(ifcLib)/IfcGeom_ifc4x2.lib

LINKER_LIBRARIES + $(ifcLib)/IfcGeom_opencascade.lib
LINKER_LIBRARIES + $(ifcLib)/IfcGeom_opencascade_ifc2x3.lib
LINKER_LIBRARIES + $(ifcLib)/IfcGeom_opencascade_ifc4.lib
LINKER_LIBRARIES + $(ifcLib)/IfcGeom_opencascade_ifc4x1.lib
LINKER_LIBRARIES + $(ifcLib)/IfcGeom_opencascade_ifc4x2.lib

LINKER_LIBRARIES + $(ifcLib)/Serializers.lib
LINKER_LIBRARIES + $(ifcLib)/Serializers_ifc2x3.lib
LINKER_LIBRARIES + $(ifcLib)/Serializers_ifc4.lib
LINKER_LIBRARIES + $(ifcLib)/Serializers_ifc4x1.lib
LINKER_LIBRARIES + $(ifcLib)/Serializers_ifc4x2.lib


LINKER_LIBRARIES + $(mdlLibs)Bentley.lib
LINKER_LIBRARIES + $(mdlLibs)BentleyGeom.lib
LINKER_LIBRARIES + $(mdlLibs)BentleyGeomSerialization.lib
LINKER_LIBRARIES + $(mdlLibs)BentleyAllocator.lib
LINKER_LIBRARIES + $(mdlLibs)DgnPlatform.lib
LINKER_LIBRARIES + $(mdlLibs)DgnView.lib
LINKER_LIBRARIES + $(mdlLibs)mdlbltin.lib
LINKER_LIBRARIES + $(mdlLibs)PSolidCore.lib 
LINKER_LIBRARIES + $(mdlLibs)RmgrTools.lib
LINKER_LIBRARIES + $(mdlLibs)SmartFeature.lib 
LINKER_LIBRARIES + $(mdlLibs)ECObjects.lib

#--------------------------------------------------------------------------------------
#    Compile the source files for the DLM
#--------------------------------------------------------------------------------------
$(o)$(appName)$(oext) : $(baseDir)sources/$(appName).cpp $(baseDir)headers/$(appName).h 

$(o)Initialization$(oext) : $(baseDir)sources/Initialization.cpp $(baseDir)headers/$(appName).h 

$(o)GraphicsProcessor$(oext) : $(baseDir)sources/GraphicsProcessor.cpp $(baseDir)headers/GraphicsProcessor.h 

$(o)IfcGenerator$(oext) : $(baseDir)sources/IfcGenerator.cpp $(baseDir)headers/IfcGenerator.h 

$(o)PropertiesReader$(oext) : $(baseDir)sources/PropertiesReader.cpp $(baseDir)headers/PropertiesReader.h 

$(o)ResultStatus$(oext) : $(baseDir)common/result_status/sources/ResultStatus.cpp $(baseDir)common/result_status/headers/ResultStatus.h

$(o)ResultStatusEnum$(oext) : $(baseDir)common/result_status/sources/ResultStatusEnum.cpp $(baseDir)common/result_status/headers/ResultStatusEnum.h

$(o)MappingHandler$(oext) : $(baseDir)mapper/sources/MappingHandler.cpp $(baseDir)mapper/headers/MappingHandler.h

$(o)ReaderPropertiesMapper$(oext) : $(baseDir)mapper/properties/sources/ReaderPropertiesMapper.cpp $(baseDir)mapper/properties/headers/ReaderPropertiesMapper.h

$(o)DictionaryProperties$(oext) : $(baseDir)modeler/properties/sources/DictionaryProperties.cpp $(baseDir)modeler/properties/headers/DictionaryProperties.h

$(o)GraphicProperties$(oext) : $(baseDir)modeler/properties/sources/GraphicProperties.cpp $(baseDir)modeler/properties/headers/GraphicProperties.h

$(o)ReaderProperties$(oext) : $(baseDir)modeler/properties/sources/ReaderProperties.cpp $(baseDir)modeler/properties/headers/ReaderProperties.h

$(o)SmartFeatureContainer$(oext) : $(baseDir)modeler/properties/smart_feature/sources/SmartFeatureContainer.cpp $(baseDir)modeler/properties/smart_feature/headers/SmartFeatureContainer.h

$(o)SmartFeatureProperties$(oext) : $(baseDir)modeler/properties/smart_feature/sources/SmartFeatureProperties.cpp $(baseDir)modeler/properties/smart_feature/headers/SmartFeatureProperties.h

$(o)SmartFeatureTreeNode$(oext) : $(baseDir)modeler/properties/smart_feature/sources/SmartFeatureTreeNode.cpp $(baseDir)modeler/properties/smart_feature/headers/SmartFeatureTreeNode.h

$(o)BooleanFunctionsEnum$(oext) : $(baseDir)common/properties/sources/BooleanFunctionsEnum.cpp $(baseDir)common/properties/headers/BooleanFunctionsEnum.h

$(o)ReaderPropertiesDictionary$(oext) : $(baseDir)common/properties/sources/ReaderPropertiesEnumUtils.cpp $(baseDir)common/properties/headers/ReaderPropertiesEnumUtils.h


%include $(MDLMKI)dlmlink.mki

#CLinkOpts + /NODEFAULTLIB:libcmt.lib
#CLinkOpts + /NODEFAULTLIB:libcmtd.lib
#CLinkOpts + /NODEFAULTLIB:msvcrtd.lib

#--------------------------------------------------------------------------------------
#    Merge the dialog resources & MDL program file using rlib
#--------------------------------------------------------------------------------------
$(reqdObjs)$(appName).mi        : $(libRscs)
    $(msg)
    > $(o)make.opt
    -o$@
    $(libRscs)
    <
    $(RLibCmd) @$(o)make.opt
    ~time

#--------------------------------------------------------------------------------------
#    complete construction of the .ma
#--------------------------------------------------------------------------------------
libRscs = \
    $(reqdObjs)$(appName).mi

#$(mdlapps)$(appName).ma : $(libRscs)
$(OPAPPS)$(appName).ma : $(libRscs)
        $(msg)
        > $(rscObjects)make.opt
        -o$@
        $(libRscs)
        <
        $(RLibCmd) @$(rscObjects)make.opt
        ~time